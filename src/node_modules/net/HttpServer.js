"use strict";

var querystring = require("querystring");
var http = require("http");

module.exports = HttpServer;

function HttpServer(requestListener){
	var server = new http.Server();
	server.on("request", function(request, response){
		__onHttpRequest(request, response, requestListener);
	});
	server.on("error", __onServerError);
	this.server = server;
}

var prototype = HttpServer.prototype;

prototype.listen = function(port, host){
	this.server.listen(port, host);
}

function __onHttpRequest(request, response, requestListener){
	var body = null;
	request.on("data", function(chunk){
		body = body ? Buffer.concat([body, chunk]) : chunk;
	});
	request.on("end", function(){
		request.removeAllListeners();
		body = parseRequestBody(request, body);
		requestListener(request, response, body);
	});
}

function parseRequestBody(request, body){
	if (null == body) return null;
	if ("POST" != request.method) return null;
	var contentType = request.headers["content-type"];
	switch(contentType){
		case "x-www-form-urlencoded":
			return querystring.parse(body);
		case "application/octet-stream":
			return body;
		default:
			return JSON.parse(body);
	}
	return body;
}

function __onServerError(err){
	switch(err.code){
		case "EADDRINUSE":
			console.error('Address in use, retrying...');
			break;
		default:
			console.error("http server error!", err);
	}
}